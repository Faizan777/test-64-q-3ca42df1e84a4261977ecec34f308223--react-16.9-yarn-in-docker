{"version":3,"sources":["Components/AddLeadModal.js","Components/LeadTable.js","App.js","serviceWorker.js","index.js"],"names":["refreshPage","window","location","reload","AddLeadModal","props","onChangeFirstName","bind","onChangeLastName","onChangeMobile","onChangeEmail","onChangeLocationType","onChangeLocationString","onSubmit","state","first_name","last_name","mobile","email","location_type","location_string","e","this","setState","target","value","preventDefault","userObject","axios","post","then","res","console","log","data","catch","error","setTimeout","type","class","data-toggle","data-target","id","tabindex","role","aria-labelledby","aria-hidden","Fragment","className","onChange","required","data-dismiss","aria-label","Component","API_URL","process","LeadTable","users","MarkUpdate","message","communication","prompt","put","deleteLead","delete","err","warn","url","get","response","scope","map","user","button","onClick","confirm","React","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ed40d2d.chunk.js","sourcesContent":["import React,{Component} from 'react'\r\nimport axios from 'axios';\r\nconst API_URL = 'http://18.209.209.196:4059';   \r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\nexport class AddLeadModal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n        this.onChangeLastName = this.onChangeLastName.bind(this);\r\n        this.onChangeMobile=this.onChangeMobile.bind(this);\r\n        this.onChangeEmail=this.onChangeEmail.bind(this);\r\n        this.onChangeLocationType=this.onChangeLocationType.bind(this);\r\n        this.onChangeLocationString=this.onChangeLocationString.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            first_name: \"\",\r\n            last_name:\"\",\r\n            mobile:\"\",\r\n            email: \"\",\r\n            location_type:\"\",\r\n            location_string:\"\"\r\n        }\r\n    }\r\n   \r\n    onChangeFirstName(e) {\r\n        this.setState({ first_name: e.target.value })\r\n    }\r\n    onChangeLastName(e) {\r\n        this.setState({ last_name: e.target.value })\r\n    }\r\n\r\n    onChangeMobile(e) {\r\n        this.setState({ mobile: e.target.value })\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({ email: e.target.value })\r\n    }\r\n\r\n    onChangeLocationType(e) {\r\n        this.setState({ location_type: e.target.value })\r\n    }\r\n\r\n    onChangeLocationString(e) {\r\n        this.setState({ location_string: e.target.value })\r\n    }\r\n    \r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        const userObject = {\r\n            first_name: this.state.first_name,\r\n            last_name:this.state.last_name,\r\n            mobile:this.state.mobile,\r\n            email: this.state.email,\r\n            location_type:this.state.location_type,\r\n            location_string:this.state.location_string\r\n        \r\n        };\r\n           \r\n      axios.post(`${API_URL}/api/leads/`, userObject)\r\n            .then((res) => {\r\n                console.log(res.data)\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            });\r\n        this.setState ({\r\n            first_name: \"\",\r\n            last_name:\"\",\r\n            mobile:\"\",\r\n            email: \"\",\r\n            location_type:\"\",\r\n            location_string:\"\"\r\n        })\r\n        setTimeout(refreshPage, 700)\r\n    }\r\n     \r\n    render() {\r\n        return (\r\n            <div>\r\n<button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n  Add a Lead\r\n</button>\r\n\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n    \r\n      <div class=\"modal-header\">\r\n      <h5 class=\"modal-title text-center\" id=\"exampleModalLabel\">Add a Lead</h5>\r\n        <div class=\"modal-body\">\r\n        <React.Fragment>\r\n            <div className=\"wrapper\">\r\n                <form onSubmit={this.onSubmit}>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-6\">\r\n                        <label>First Name</label>\r\n                        <input type=\"text\" value={this.state.first_name} onChange={this.onChangeFirstName} className=\"form-control\" required/>\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label>Last Name</label>\r\n                        <input type=\"text\" value={this.state.last_name} onChange={this.onChangeLastName} className=\"form-control\" required/>\r\n                    </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label>Mobile</label>\r\n                        <input type=\"phone\" value={this.state.mobile} onChange={this.onChangeMobile} className=\"form-control\" required />\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label>Add User Email</label>\r\n                        <input type=\"email\" value={this.state.email} onChange={this.onChangeEmail} className=\"form-control\" required/>\r\n                    </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label>Location Type</label>\r\n                        <select id=\"inputState\" value={this.state.location_type} onChange={this.onChangeLocationType} class=\"form-control\" required>\r\n                        <option>City</option>\r\n                        <option>State</option>\r\n                        <option>Country</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label>Location String</label>\r\n                        <input type=\"text\" value={this.state.location_string} onChange={this.onChangeLocationString} className=\"form-control\" required/>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                        <input type=\"submit\"  \r\n                        value=\"Save\" className=\"btn btn-success btn-block\" />\r\n                        \r\n                    </div>\r\n                </form>\r\n            </div>\r\n            </React.Fragment>\r\n         </div>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n    \r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        {/* <button type=\"button\" class=\"btn btn-primary\"  >Save changes</button> */}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>   \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AddLeadModal\r\n\r\n\r\n","import React,{useState} from 'react'\r\nimport axios from 'axios';\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport function refreshPage() {\r\n  window.location.reload(false);\r\n}\r\n\r\nclass LeadTable extends React.Component {\r\n    constructor(props){\r\n\r\n   super(props);\r\n   this.deleteLead = this.deleteLead.bind(this)\r\n    }\r\n    state = {\r\n        users: []\r\n    }\r\n\r\n   \r\n    \r\n    MarkUpdate=(id,message)=> {\r\n      const result = window.prompt(\"Mark your Communication\",message);\r\n        let userObject = {\r\n            communication: result\r\n        \r\n        };\r\n     \r\n           \r\n      axios.put(`${API_URL}/api/mark_lead/${id}`, userObject)\r\n            .then((res) => {\r\n                console.log(res.data)\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            });\r\n        this.setState ({\r\n            communication : \" \"\r\n\r\n        })\r\n        setTimeout(refreshPage, 700)\r\n    }  \r\n  \r\n    deleteLead(id) {\r\n      axios.delete(`${API_URL}/api/leads/${id}`)\r\n          .catch(err => console.warn(err));\r\n         \r\n        }\r\ncomponentDidMount() {\r\n        const url = `${API_URL}/api/leads/`;\r\n        axios.get(url).then(response => response.data)\r\n        .then((data) => {\r\n          this.setState({ users: data })\r\n          console.log(this.state.users)\r\n          \r\n         })\r\n      } \r\n    render() {\r\n        return ( \r\n                      <div className=\"container\">\r\n              <div className=\"py-4\">\r\n                <h1></h1>\r\n                <table class=\"table border shadow\">\r\n                  <thead class=\"thead-dark\">\r\n                    <tr>\r\n                      <th scope=\"col\">Name</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Mobile Number</th>\r\n                      <th scope=\"col\">Location Type</th>\r\n                      <th scope=\"col\">Location String</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  {this.state.users.map((user) => (\r\n                      <tr>\r\n                        {/* <th scope=\"row\">{user + 1}</th> */}\r\n                        <td>{user.first_name} {user.last_name}</td>\r\n                  <td>{user.email}</td>\r\n                        <td>{user.mobile}</td>\r\n                  <td>{user.location_type}</td>\r\n                  <td>{user.location_string}</td>\r\n                        <td><button type=\"button\"  class=\"btn btn-danger\" data-toggle=\"modal\" data-target=\"delete\"\r\n                         button onClick={(e) => { if (window.confirm('Do you wish to delete this Lead?')\r\n                         ) this.deleteLead(user.id);setTimeout(refreshPage, 2000);}}\r\n                                                  >Delete</button>\r\n                                                  &nbsp;&nbsp;&nbsp;\r\n                        <button type=\"button\"  class=\"btn btn-primary\" data-toggle=\"modal\"\r\n                         data-target=\"Update\"\r\n                         button onClick={(e) => {this.MarkUpdate(user.id,user.communication);}}\r\n                                                  >Mark Update</button> </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          );}}\r\nexport default LeadTable\r\n\r\n\r\n{/* If we want confirmation on update confirmation we can use this too <button type=\"button\"  class=\"btn btn-primary\" data-toggle=\"modal\"\r\n                         data-target=\"Update\"\r\n                         button onClick={(e) => { if (window.confirm('Do you wish to Update the lead?')\r\n                         ) this.MarkUpdate(user.id,user.communication);}}\r\n                                                  >Mark Update</button>  */}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AddLeadModal from './Components/AddLeadModal';\r\nimport LeadTable from './Components/LeadTable';\r\nfunction App() {\r\n  return (\r\n     \r\n    <div>\r\n    <div className=\"top\"><h3>Lead Management Dashboad</h3></div>\r\n   {<AddLeadModal/>}\r\n   {<LeadTable/>} \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// BACKEND ENDPOINT BASE URL\r\nconsole.log(process.env.REACT_APP_API_URL);\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}